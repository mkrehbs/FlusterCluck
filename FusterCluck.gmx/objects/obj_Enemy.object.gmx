<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_EnemyD</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Colton
canmove = true;
pizzad = false;
pizzadangle = 0;
hurt = false;


away1 = instance_nearest(x,y,obj_PatrolPoint).x;
away2 = instance_nearest(x,y,obj_PatrolPoint).y;
home1 = xstart;
home2 = ystart;

var patrolpointx;
var patrolpointy;

cyclepatrol = false;

pointofinterestx = away1;
pointofinteresty = away2;

//ai edits

update = true;

wtf = 10;
moving = false;


path = path_add();
//mp_grid_path(Control.grid,path,x,y,obj_Player.x,obj_Player.y,0);
//path_start(path,3,"",1);

/* keep below for reference
grid = mp_grid_create(0,0,room_width/32,room_height/32,32,32);
path = path_add();
mp_grid_add_instances(grid,obj_Barrier,1);
mp_grid_path(grid,path,x,y,obj_Player.x,obj_Player.y,1);
path_start(path,3,"",1);

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Matt
hp = 2;
alert = 2;
dir = 0;

//image_angle = direction;

//instance_create(

//mp_grid_add_instances(Grid, obj_Barrier, 1);
//mp_grid_path(Grid, Path, x, y, obj_Player.x, obj_Player.y, 1);
//path_start(Path,2,"",1);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alert = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Colton
if(hp&lt;1)
    {
        instance_create(x, y, obj_Tombstone);
        instance_destroy();
        Control.dog_kill++;
    }
if(hurt){hurt = false;}

//show_debug_message(alert);

if(cyclepatrol = false){patrolpointx = away1; patrolpointy = away2;}else{patrolpointx = home1; patrolpointy = home2;}

if(collision_line(x,y,obj_Player.x,obj_Player.y,obj_Player,0,0) &gt; 0 &amp;&amp; distance_to_object(obj_Player) &lt; 100){alert = 1; update = true; Control.alert_raise++;}

if(distance_to_point(pointofinterestx,pointofinteresty) &lt; 1){update = true;}

if(canmove){
switch(alert){
    case 1: moving = true; if(update){pointofinterestx = obj_Player.x; pointofinteresty = obj_Player.y; mp_grid_path(Control.grid,path,x,y,obj_Player.x,obj_Player.y,0); path_start(path,5,"",1);} break;
    case 2: moving = true; if(update){cyclepatrol *= -1; pointofinterestx = patrolpointx; pointofinteresty = patrolpointy; mp_grid_path(Control.grid,path,x,y,pointofinterestx,pointofinteresty,0); path_start(path,3,"",1);} break;
    //case 3: if(update){} break;
    default: break;


}}

if(moving){image_speed = 1}else{image_speed = 0;}


update = false;
moving = false;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Matt

//if(canmove){

dir = direction;

if(moving){image_speed = 0.35}else{image_speed = 0;}

//if (dir &gt; 315) &amp;&amp; (dir &lt;= 45)
if ((315 &lt; dir &lt;= 0) &amp;&amp; (0 &lt; dir &lt;= 45))
{
    if sprite_index != spr_EnemyR
    {
        sprite_index = spr_EnemyR;
    }
}
if (dir &gt; 45) &amp;&amp; (dir &lt;=135)
//if (45 &lt; dir &lt;= 135)
{
    if sprite_index != spr_EnemyU
    {
        sprite_index = spr_EnemyU;
    }
}
if (dir &gt; 135) &amp;&amp; (dir &lt;= 225)
//if (135 &lt; dir &lt;= 225)
{
    if sprite_index != spr_EnemyL
    {
        sprite_index = spr_EnemyL;
    }
}
if (dir &gt; 225) &amp;&amp; (dir &lt;= 315)
//if (225 &lt; dir &lt;= 315)
{
    if sprite_index != spr_EnemyD
    {
        sprite_index = spr_EnemyD;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Door">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alert = 2; update = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(obj_Player){
hp-=1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
if(path){draw_path(path,xstart,ystart,1);}
//if(grid){mp_grid_draw(grid);}
if(pizzad == true){draw_sprite_ext(spr_Pizza,0,x,y-5,1,1,pizzadangle,c_white,1)}
if(hurt == true){image_blend = c_red};else{image_blend = c_white;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
